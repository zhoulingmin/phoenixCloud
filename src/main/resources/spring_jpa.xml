<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<!-- DataSource -->
	<!--
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	 -->
	
	<!-- JPA ctrl db -->
	<bean id="ctrlDbXaDS" class="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource" lazy-init="true">
		<property name="pinGlobalTxToPhysicalConnection" value="true" />
		<property name="user" value="${ctrl_db_username}" />
		<property name="password" value="${ctrl_db_password}" />
		<property name="url" value="${ctrl_db_uri}${ctrl_db_name}?useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull" />
	</bean>
	<bean id="ctrlDbSource" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
		<property name="uniqueResourceName" value="ctrlDS" />
		<property name="xaDataSource" ref="ctrlDbXaDS" />
		<property name="poolSize" value="30" />
		<property name="testQuery" value="select 1" />
	</bean>
	<bean id="ctrlDbEmFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="ctrlDbUnit" />
		<property name="dataSource" ref="ctrlDbSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<prop key="hibernate.max_fetch_depth">3</prop>
			</props>
		</property>
	</bean>
	
	<!-- JPA res db -->
	<bean id="resDbXaDS" class="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource" lazy-init="true">
		<property name="pinGlobalTxToPhysicalConnection" value="true" />
		<property name="user" value="${res_db_username}" />
		<property name="password" value="${res_db_password}" />
		<property name="url" value="${res_db_uri}${res_db_name}?useUnicode=true&amp;characterEncoding=UTF-8" />
	</bean>
	<bean id="resDbSource" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
		<property name="uniqueResourceName" value="resDS" />
		<property name="xaDataSource" ref="resDbXaDS" />
		<property name="poolSize" value="30" />
		<property name="testQuery" value="select 1" />
		
	</bean>
	<bean id="resDbEmFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="resDbUnit" />
		<property name="dataSource" ref="resDbSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<prop key="hibernate.max_fetch_depth">3</prop>
			</props>
		</property>
	</bean>
	
	<!-- JPA annotations bean post processor -->
	<!-- <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" /> -->

	<!-- TransactionManager -->
	
	<!-- <bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager" autowire="byName" />
	<tx:annotation-driven transaction-manager="txManager" />
	-->
	<tx:annotation-driven />
	
	
	<bean id="userTransactionService" class="com.atomikos.icatch.config.UserTransactionServiceImp"
    init-method="init" destroy-method="shutdownForce">
	    <constructor-arg>
	        <!-- IMPORTANT: specify all Atomikos properties here -->
	        <props>
	            <prop key="com.atomikos.icatch.service">com.atomikos.icatch.standalone.UserTransactionServiceFactory</prop>
	            <prop key="com.atomikos.icatch.console_file_name">tm.out</prop>
	            <prop key="com.atomikos.icatch.output_dir">${atomikos_output_dir}</prop>
	            <prop key="com.atomikos.icatch.log_base_dir">${atomikos_log_base_dir}</prop>
	            <prop key="com.atomikos.icatch.log_base_name">tmlog</prop>
	            <prop key="com.atomikos.icatch.tm_unique_name">com.atomikos.spring.jdbc.tm</prop>
	            <prop key="com.atomikos.icatch.console_log_level">${atomikos_console_log_level}</prop>
	            <prop key="com.atomikos.icatch.serial_jta_transactions">${atomikos_serial_jta_transactions}</prop>
	        </props>
	    </constructor-arg>
	</bean>

	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
		init-method="init" destroy-method="close" depends-on="userTransactionService">
		<!-- When close is called, should we force transactions to terminate? -->
		<property name="forceShutdown" value="false" />
		<!-- Do not create a transaction service as we have specified the bean in this file -->
    	<property name="startupTransactionService" value="false" />
	</bean>

	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp" depends-on="userTransactionService">
		<property name="transactionTimeout" value="300" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager"
		depends-on="atomikosTransactionManager,atomikosUserTransaction">
		<property name="transactionManager" ref="atomikosTransactionManager" />
		<property name="userTransaction" ref="atomikosUserTransaction" />
		<property name="allowCustomIsolationLevels" value="true" />
		<qualifier value="jta" />
	</bean>
	
	<bean id="ctrlDbSharedEm" class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
		<property name="entityManagerFactory" ref="ctrlDbEmFactory" />
	</bean>
	
	<bean id="resDbSharedEm" class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
		<property name="entityManagerFactory" ref="resDbEmFactory" />
	</bean>

	<!-- Managed Beans -->
	<context:component-scan base-package="com.phoenixcloud" />
</beans>
